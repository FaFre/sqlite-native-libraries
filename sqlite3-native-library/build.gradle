buildscript {
    repositories {
        repositories {
            google()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:4.1.0'
        }
    }
}

plugins {
    id 'de.undercouch.download' version '3.4.3'
    id('maven-publish')
    id('signing')
}

apply plugin: 'com.android.library'

group = 'eu.simonbinder'
version = '3.34.1'
description = 'Native sqlite3 library without JNI bindings'

repositories {
    mavenCentral()
    google()
    jcenter {
        content {
            includeGroup('org.jetbrains.trove4j')
        }
    }
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path 'cpp/CMakeLists.txt'
        }
    }
}

task androidSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
}

def secretsFile = rootProject.file('local.properties')
def secretProperties = new Properties()
if (secretsFile.exists()) {
    def reader = secretsFile.newReader()
    secretProperties.load(reader)
    reader.close()

    secretProperties.each { key, value ->
        if (key.startsWith("signing")) {
            ext[key] = value
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version

            artifact "$buildDir/outputs/aar/${project.name}-release.aar"
            artifact androidSourcesJar

            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/simolus3/sqlite-native-libraries'

                developers {
                    developer {
                        id = 'simonbinder'
                        name = 'Simon Binder'
                        email = 'oss@simonbinder.eu'
                    }
                }

                licenses {
                    license {
                        name = "Public Domain"
                        url = "https://www.sqlite.org/copyright.html"
                    }
                }

                scm {
                    connection = 'scm:git:github.com/simolus3/sqlite-native-libraries.git'
                    developerConnection = 'scm:git:ssh://github.com/simolus3/sqlite-native-libraries.git'
                    url = 'https://github.com/simolus3/sqlite-native-libraries/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username secretProperties.get("ossrhUsername")
                password secretProperties.get("ossrhPassword")
            }
        }
    }
}


signing {
    useGpgCmd()
    sign publishing.publications
}

tasks.named("publish") {
    dependsOn("assembleRelease", "androidSourcesJar")
}

ext {
    sqliteDistributionUrl = 'https://www.sqlite.org/2021/sqlite-amalgamation-3340100.zip'
}

task downloadSqlite(type: Download) {
    src project.sqliteDistributionUrl
    dest 'cpp/sqlite.zip'
}

task installSqlite(dependsOn: downloadSqlite, type: Copy) {
    from zipTree(downloadSqlite.dest).matching {
        include '*/sqlite3.*'
        eachFile { it.setPath(it.getName()) }
    }
    into 'cpp/'
}

preBuild.dependsOn installSqlite