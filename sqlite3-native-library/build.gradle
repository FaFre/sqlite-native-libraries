plugins {
    id 'de.undercouch.download' version '3.4.3'
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

group = 'eu.simonbinder'
version = '3.34.1'
description = 'Native sqlite3 library without JNI bindings'

repositories {
    mavenCentral()
    google()
    jcenter {
        content {
            includeGroup('org.jetbrains.trove4j')
        }
    }
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path 'cpp/CMakeLists.txt'
        }
    }
}

def localRepo = 'build/publications/local'

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            artifact "build/outputs/aar/${project.name}-release.aar"
        }
    }

    repositories {
        maven {
            name = 'local'
            url = file(localRepo).toURI().toURL()
        }
    }
}

Properties properties = new Properties()
File localProperties = project.rootProject.file('local.properties')
if (localProperties.exists()) {
    properties.load(localProperties.newDataInputStream())
}

task fetchMavenMetadata(type: Download) {
    def file = 'eu/simonbinder/sqlite3-native-library/maven-metadata.xml'
    src "https://storage.googleapis.com/simon-public-euw3/maven/$file"
    dest "$localRepo/$file"
}

task uploadPublicationToGoogleCloudStorage(type: Exec) {
    commandLine('gsutil', 'rsync', '-r', localRepo, 'gs://simon-public-euw3/maven')
    workingDir(project.projectDir)
}

tasks.named("publish") {
    dependsOn("assembleRelease", "fetchMavenMetadata")
    finalizedBy('uploadPublicationToGoogleCloudStorage')
}

ext {
    sqliteDistributionUrl = 'https://www.sqlite.org/2021/sqlite-amalgamation-3340100.zip'
}

task downloadSqlite(type: Download) {
    src project.sqliteDistributionUrl
    dest 'cpp/sqlite.zip'
}

task installSqlite(dependsOn: downloadSqlite, type: Copy) {
    from zipTree(downloadSqlite.dest).matching {
        include '*/sqlite3.*'
        eachFile { it.setPath(it.getName()) }
    }
    into 'cpp/'
}

preBuild.dependsOn installSqlite