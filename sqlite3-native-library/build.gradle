plugins {
    id 'de.undercouch.download' version '3.4.3'
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'de.undercouch.download'

group = 'eu.simonbinder'
version = '3.30.1'
description = 'Native sqlite3 library without JNI bindings'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path 'cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

android.libraryVariants
publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            artifact "build/outputs/aar/${project.name}-release.aar"
        }
    }
}

Properties properties = new Properties()
File localProperties = project.rootProject.file('local.properties')
if (localProperties.exists()) {
    properties.load(localProperties.newDataInputStream())
}

publish.dependsOn "assembleRelease"
bintrayUpload.dependsOn "assembleRelease"

bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')
    publications = ['maven']
    pkg {
        repo = 'sqlite3-native-library'
        name = 'sqlite3-native-library'
        userOrg = 'sbinder'
        licenses = ['Public Domain']
        vcsUrl = 'https://github.com/simolus3/sqlite-native-libraries.git'
        version {
            name = project.version
            desc = project.description
            released = new Date()
        }
    }
}


ext {
    sqliteDistributionUrl = 'https://sqlite.org/2019/sqlite-amalgamation-3300100.zip'
}

task downloadSqlite(type: Download) {
    src project.sqliteDistributionUrl
    dest 'cpp/sqlite.zip'
}

task installSqlite(dependsOn: downloadSqlite, type: Copy) {
    from zipTree(downloadSqlite.dest).matching {
        include '*/sqlite3.*'
        eachFile { it.setPath(it.getName()) }
    }
    into 'cpp/'
}

preBuild.dependsOn installSqlite